name: Main Workflow

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  run-tests:
    uses: ./.github/workflows/unit-test-job.yaml

  build-and-push-docker:
    needs: run-tests
    uses: ./.github/workflows/docker-build-push-job.yaml
    with:
      image_name: soatproject/fastfood-soat-app-totem
      image_tag: latest
    secrets:
      DOCKERHUB_LOGIN: ${{ secrets.DOCKERHUB_LOGIN }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

  notify-discord-build-status:
    # Este job só será executado se o job build-and-push-docker tiver terminado
    needs: build-and-push-docker
    runs-on: ubuntu-latest
    # O 'always()' garante que este job será executado mesmo que o job anterior falhe.
    if: ${{ always() }}
    steps:
      - name: Send Build Status to Discord
        run: |
          # Obtenha o status do job de build
          BUILD_STATUS="${{ needs.build-and-push-docker.result }}"
          
          # Obtenha o URL do workflow run
          WORKFLOW_URL="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          
          MESSAGE=""
          COLOR=0 # Default (gray/black for unknown status)
          
          if [ "$BUILD_STATUS" == "success" ]; then
            MESSAGE="✅ Docker build and push succeeded on the `main` branch! [View Workflow](${WORKFLOW_URL})"
            COLOR=3066993 # Green
          elif [ "$BUILD_STATUS" == "failure" ]; then
            MESSAGE="❌ Docker build and push failed on the `main` branch! [View Workflow](${WORKFLOW_URL})"
            COLOR=15158332 # Red
          else
            # Para casos como 'skipped' ou 'cancelled'
            MESSAGE="⚠️ Docker build and push status: ${BUILD_STATUS} on the `main` branch. [View Workflow](${WORKFLOW_URL})"
            COLOR=16776960 # Yellow
          fi
          
          # Envie a mensagem formatada para o Discord usando um embed para melhor visualização
          # O campo 'content' é para uma mensagem simples, 'embeds' para mensagens mais ricas.
          curl -H "Content-Type: application/json" \
          -d "{\"embeds\":[{\"description\":\"$MESSAGE\",\"color\":$COLOR}]}" \
          "${{ secrets.DISCORD_WEBHOOK }}"