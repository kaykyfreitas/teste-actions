CREATE TABLE "clients" (
                           "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
                           "public_id" uuid NOT NULL,
                           "name" varchar(100),
                           "email" varchar(100),
                           "cpf" varchar(11),
                           "created_at" timestamp DEFAULT CURRENT_TIMESTAMP,
                           "updated_at" timestamp DEFAULT CURRENT_TIMESTAMP,
                           "deleted_at" timestamp
);

CREATE TABLE "orders" (
                          "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
                          "public_id" uuid NOT NULL,
                          "value" decimal(10, 2) NOT NULL,
                          "order_number" int NOT NULL,
                          "status" varchar(20) NOT NULL,
                          "client_id" int,
                          "created_at" timestamp DEFAULT CURRENT_TIMESTAMP,
                          "updated_at" timestamp DEFAULT CURRENT_TIMESTAMP,
                          "deleted_at" timestamp,
                          CONSTRAINT check_order_status CHECK (
                              status IN ('RECEIVED', 'IN_PREPARATION', 'READY', 'COMPLETED')
                              )
);

CREATE TABLE "order_products" (
                                  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
                                  "value" decimal(10, 2) NOT NULL,
                                  "order_id" int NOT NULL,
                                  "product_id" int NOT NULL,
                                  "quantity" int NOT NULL,
                                  "created_at" timestamp DEFAULT CURRENT_TIMESTAMP,
                                  "updated_at" timestamp DEFAULT CURRENT_TIMESTAMP,
                                  "deleted_at" timestamp
);

CREATE TABLE "products" (
                            "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
                            "value" decimal(10, 2),
                            "name" varchar(100) NOT NULL,
                            "description" varchar(500),
                            "image_url" varchar(500),
                            "product_category_id" int NOT NULL,
                            "created_at" timestamp DEFAULT CURRENT_TIMESTAMP,
                            "updated_at" timestamp DEFAULT CURRENT_TIMESTAMP,
                            "deleted_at" timestamp
);

CREATE TABLE "product_categories" (
                                      "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
                                      "name" varchar(100) NOT NULL,
                                      "created_at" timestamp DEFAULT CURRENT_TIMESTAMP,
                                      "updated_at" timestamp DEFAULT CURRENT_TIMESTAMP,
                                      "deleted_at" timestamp
);

CREATE TABLE "payments" (
                            "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
                            "value" decimal(10, 2) NOT NULL,
                            "external_reference" varchar NOT NULL,
                            "qr_code" text,
                            "order_id" int NOT NULL,
                            "status" varchar(20) NOT NULL,
                            "created_at" timestamp DEFAULT CURRENT_TIMESTAMP,
                            "updated_at" timestamp DEFAULT CURRENT_TIMESTAMP,
                            "deleted_at" timestamp,
                            CONSTRAINT check_payment_status CHECK (
                                status IN ('PENDING', 'APPROVED', 'IN_PROCESS', 'REJECTED', 'CANCELLED')
                                )
);

CREATE TABLE "staff" (
                         "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
                         "name" varchar(100) NOT NULL,
                         "email" varchar(100) NOT NULL,
                         "cpf" varchar(11) NOT NULL,
                         "is_active" boolean NOT NULL,
                         "created_at" timestamp DEFAULT CURRENT_TIMESTAMP,
                         "updated_at" timestamp DEFAULT CURRENT_TIMESTAMP,
                         "deleted_at" timestamp
);

CREATE TABLE "staff_roles" (
                               "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
                               "staff_id" int NOT NULL,
                               "role_id" int NOT NULL,
                               "created_at" timestamp DEFAULT CURRENT_TIMESTAMP,
                               "updated_at" timestamp DEFAULT CURRENT_TIMESTAMP,
                               "deleted_at" timestamp
);

CREATE TABLE "roles" (
                         "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
                         "role_name" varchar(20) NOT NULL,
                         "created_at" timestamp DEFAULT CURRENT_TIMESTAMP,
                         "updated_at" timestamp DEFAULT CURRENT_TIMESTAMP,
                         "deleted_at" timestamp,
                         CONSTRAINT check_role CHECK (
                             role_name IN ('ADMIN', 'EMPLOYEE')
                             )
);


ALTER TABLE "orders"
    ADD FOREIGN KEY ("client_id") REFERENCES "clients" ("id");

ALTER TABLE "order_products"
    ADD FOREIGN KEY ("order_id") REFERENCES "orders" ("id");

ALTER TABLE "order_products"
    ADD FOREIGN KEY ("product_id") REFERENCES "products" ("id");

ALTER TABLE "products"
    ADD FOREIGN KEY ("product_category_id") REFERENCES "product_categories" ("id");

ALTER TABLE "payments"
    ADD FOREIGN KEY ("order_id") REFERENCES "orders" ("id");

ALTER TABLE "staff_roles"
    ADD FOREIGN KEY ("staff_id") REFERENCES "staff" ("id");

ALTER TABLE "staff_roles"
    ADD FOREIGN KEY ("role_id") REFERENCES "roles" ("id");


CREATE OR REPLACE FUNCTION update_timestamp()
    RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = CURRENT_TIMESTAMP;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;


DO $$
    DECLARE
        tbl_name text;
    BEGIN
        FOR tbl_name IN
            SELECT table_name FROM information_schema.columns WHERE column_name = 'updated_at'
            LOOP
                EXECUTE format(
                        'CREATE TRIGGER set_updated_at_%I
                         BEFORE UPDATE ON %I
                         FOR EACH ROW
                         EXECUTE FUNCTION update_timestamp();',
                        tbl_name,
                        tbl_name
                        );
            END LOOP;
    END;
$$;
